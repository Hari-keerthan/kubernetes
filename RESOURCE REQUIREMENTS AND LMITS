--------------------------------------------------------------------------
RESOURCE REQUIREMENTS AND LMITS

by default kuberenetes assumes a pod or a container in pod requires 0.5 CPU, 256Mi
by default kubernetes sets limits to a pod or a container in pod - default limits 1VCPU , 521Mi
For the POD to pick up those defaults you must have first set those as default values for request and limit by creating a LimitRange in that namespace.
cat > def-limits.yaml
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
  - default:
      memory: 512Mi
    defaultRequest:
      memory: 256Mi
    type: Container

kubectl apply -f def-limits.yaml
https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/



apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-limit-range
spec:
  limits:
  - default:
      cpu: 1
    defaultRequest:
      cpu: 0.5
    type: Container
to increase the limites we need to specify in yaml file
if a container needs more than that then we need to specify that in yaml file 
example yaml file with resources - (cat > pod-definition.yaml)
piVersion: v1
kind: Pod
metadata:
   name: myapp-pod (this is name of pod)
   labels:
      app: myapp
      anykey: anyvalue
      costcenter: US
      
      
spec:
   containers:
      - name: nginx-container (this is name of container in pod)
        image: nginx (this is the image that kubernetes gets from docker hub)
		ports:
		   - containerPort: 8080
		resources:
		   requests:
		      memory: "1Gi"
			  cpu : 1
		   limits:
		      memory: "2Gi"
			  cpu: 2
limits and requests are set to each container in pod	

https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource	

--------------------------------------------------------------------------
